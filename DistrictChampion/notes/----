{% load static %}
{% load dict_utils %}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>District Champion</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #212529;
            margin: 0;
            overflow: hidden;
        }

        .image-wrapper {
            position: relative;
            display: inline-block;
            max-width: 90vw;
        }

        .image-wrapper img {
            width: 100%;
            height: auto;
            display: block;
            border-radius: 30px;
        }
    </style>
</head>
<body class="d-flex justify-content-center align-items-center vh-100">
<div class="image-wrapper position-relative" id="imageWrapper">
    <!-- Background Image -->
    <img src="{% static 'pics/_dc_playf_2.1.png' %}" id="gameImage" alt="Game Background">

    <!-- Card Template (Hidden) -->
    <div id="cardTemplate" class="card position-absolute d-flex flex-column"
         style="top: 50%; width: 10%; height: 90%; transform: translateY(-50%); display: none;">
        <div class="card-header bg-primary text-white py-1 px-2" style="height: 2rem;">Header</div>
        <div class="card-body py-1 px-2 flex-grow-1 overflow-auto">Body content</div>
        <div class="card-footer bg-primary text-white py-1 px-2" style="height: 2rem;">Footer</div>
    </div>

    <script>
        const cardData = [
            { header: 'A - Defend', body: 'Content 1', footer: 'Footer 1' },
            { header: 'A - Middle', body: 'Content 2', footer: 'Footer 2' },
            { header: 'A - Attack', body: 'Content 3', footer: 'Footer 3' },
            { header: 'B - Attack', body: 'Content 4', footer: 'Footer 4' },
            { header: 'B - Middle', body: 'Content 5', footer: 'Footer 5' },
            { header: 'B - Attack', body: 'Content 6', footer: 'Footer 6' },
        ];

        const container = document.getElementById('imageWrapper');
        const template = document.getElementById('cardTemplate');

        const cardWidth = 10;     // in %
        const leftBound = 10;     // %
        const rightBound = 90;    // %
        const usableSpace = rightBound - leftBound;
        const totalCards = cardData.length;

        const totalCardWidth = totalCards * cardWidth;
        const remainingSpace = usableSpace - totalCardWidth;
        const gap = totalCards > 1 ? remainingSpace / (totalCards - 1) : 0;

        cardData.forEach((data, index) => {
            const clone = template.cloneNode(true);
            clone.id = card-${index};
            clone.style.display = 'block';
            clone.style.left = ${leftBound + index * (cardWidth + gap)}%;
            clone.style.width = ${cardWidth}%;
            clone.querySelector('.card-header').textContent = data.header;
            clone.querySelector('.card-body').textContent = data.body;
            clone.querySelector('.card-footer').textContent = data.footer;
            container.appendChild(clone);
        });

        // Optional: remove the template after cloning to keep DOM clean
        template.remove();
    </script>
</div>
</body>
</html>